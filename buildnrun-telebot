#!/bin/bash

if [ ! -f 'TeleBotService.sln' ]
then
   echo "This is not the TeleBotService source folder: $(pwd)"
   exit
fi

if [ -e "env.sh" ]; then
    source env.sh
else
    echo "No env.sh file found"
    exit 11
fi

if [ -z "${INCLUDE_SPEEDTEST}" ]; then
  export INCLUDE_SPEEDTEST="yes"
fi

if [ -z "${INCLUDE_NETCAT}" ]; then
  export INCLUDE_NETCAT="yes"
fi

if [ -z "${RUN_TESTS}" ]; then
  export RUN_TESTS="yes"
fi

if [ -z "${INCLUDE_ALSA}" ]; then
  export INCLUDE_ALSA="yes"
fi

if [ -z "${GIT_BRANCH}" ]; then
  export GIT_BRANCH="galprod"
fi

if [ -z "${SND_DEVICE}" ]; then
  export SND_DEVICE="/dev/snd"
fi

git checkout $GIT_BRANCH && git pull

latcommit=$(git log --format="%h" -n 1)
if [ "$1" == "--rebuild"  ]; then
    lastbuildcommit="0"
else
    lastbuildcommit=$(cat TeleBotService/buildinfo 2> /dev/null || echo "")
fi

RESET_CONTAINER=0
SHUTDOWN_CONTAINER=0
if [ "$1" == "--reset-container"  ]; then
    RESET_CONTAINER=1
fi

if [ "$1" == "--shutdown"  ]; then
    SHUTDOWN_CONTAINER=1
fi


if [ "$lastbuildcommit" != "$latcommit" ]
then
    SECONDS=0
    echo "Generating new build. Last commit: $latcommit"
    echo $latcommit > TeleBotService/buildinfo
    docker build \
          --build-arg INCLUDE_SPEEDTEST="$INCLUDE_SPEEDTEST" \
          --build-arg INCLUDE_NETCAT="$INCLUDE_NETCAT" \
          --build-arg INCLUDE_ALSA="$INCLUDE_ALSA" \
          --build-arg RUN_TESTS="$RUN_TESTS" \
          -t $DOCKER_IMAGE_TAG -f Dockerfile . && RESET_CONTAINER=1
          
    if [ "$?" != "0" ]; then
        rm TeleBotService/buildinfo
    fi
    echo "Compilation time: $SECONDS seconds"
else
    echo "No new commits to generate a new build."
fi

if [ "$SHUTDOWN_CONTAINER" -eq "1" ]; then
    echo "Shutting docker containers"
    docker-compose down
fi

if [ "$RESET_CONTAINER" -eq "1" ]; then
    echo "Reseting docker containers"
    docker-compose down
    docker-compose up -d
fi