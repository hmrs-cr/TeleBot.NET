services:
  telebot-service:
    image: ${DOCKER_IMAGE_TAG}
    container_name: ${DOCKER_CONTAINER_NAME}
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - redis
    volumes:
      - ${VOLUME_SRC1}:${VOLUME_DEST1}
    environment:
      - REMOTE_CONFIG_URL=${REMOTE_CONFIG_URL}
      - REMOTE_CONFIG_AUTH_TOKEN=${REMOTE_CONFIG_AUTH_TOKEN}
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
    command:
      - "Telegram:BotToken=${TELEGRAM_BT}"
      - "Telegram:AdminChatId=${TELEGRAM_ADMINCHATID}"
      - "Tapo:UserName=${TAPOUN}"
      - "Tapo:Password=${TAPOP}"
      - "Users:hmrscr:IsAdmin=true"
      - "Users:hmrscr:Language=es"
      - "Users:hmrscr:Enabled=true"
      - "Redis:Host=redis,password=${REDIS_PASS}"
      - "HOSTNAME=${HOSTNAME}"

  # The Redis database service.
  redis:
    image: redis
    container_name: ${DOCKER_REDIS_CONTAINER_NAME}
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --save 10 1 --loglevel warning --requirepass ${REDIS_PASS}

volumes:
  telebot-local-config:
  redis-data:
